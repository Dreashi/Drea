/*
	问题描述：有一个二维数组，从上到下，从左到右都是递增的，从中寻找一个关键字，有返回true,无则返回false
	算法描述：从右上角开始寻找，可以最快地缩小寻找的范围（其他角度则无法做到这一点）

*/

#include<stdio.h>
bool findKey(int a[4][4],int rows,int cols,int key)
{
	bool found = false;
	if(a!=NULL && rows>0 && cols>0)
	{
		int row=0;
		int col=cols-1;
		while(row<rows && col>=0)
		{
			if(a[row][col]==key)
			{
				found = true;
				break;
			}
			else if(a[row][col]>key)
			{
				col--;
			}
			else
			{
				row++;
			}
		}

	}

	return found;
}
int main(void)
{
	int arr[4][4]={{1,2,8,9},{2,4,9,12},{4,7,10,13},{6,8,11,15}};
	if(findKey(arr,4,4,6))
	{
		printf("数组中含有该值。");
	}
	else
	{
		printf("查无此数!");
	}
	return 0;
}
